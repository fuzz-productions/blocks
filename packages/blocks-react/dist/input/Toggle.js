"use strict";var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};function _objectWithoutProperties(e,t){var r={};for(var a in e)0<=t.indexOf(a)||Object.prototype.hasOwnProperty.call(e,a)&&(r[a]=e[a]);return r}var React=require("react"),PropTypes=require("prop-types"),classnames=require("classnames"),Toggle=function(e){var t=e.className,r=e.style,a=e.options,s=e.value,o=e.label,l=_objectWithoutProperties(e,["className","style","options","value","label"]),p=classnames("blx-toggle",t,{"blx-disabled":l.disabled});return React.createElement("div",{style:r,className:p,role:"radiogroup","aria-label":o},a.map(function(e,t){return React.createElement("label",{className:"blx-toggle-container",key:e.text},React.createElement("input",_extends({type:"radio",id:"toggle-option-"+t,value:e.value,defaultChecked:e.value===s},l)),React.createElement("span",{className:"blx-toggle-text"},e.text))}))};Toggle.propTypes={style:PropTypes.object,className:PropTypes.object,value:PropTypes.oneOfType([PropTypes.string,PropTypes.number]).isRequired,options:PropTypes.arrayOf(PropTypes.shape({text:PropTypes.string.isRequired,value:PropTypes.oneOfType([PropTypes.string,PropTypes.number]).isRequired})).isRequired,disabled:PropTypes.bool,label:PropTypes.string},Toggle.defaultProps={disabled:!1,label:"toggle"},module.exports=Toggle;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0L1RvZ2dsZS5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiUHJvcFR5cGVzIiwiY2xhc3NuYW1lcyIsIlRvZ2dsZSIsIl9yZWYiLCJjbGFzc05hbWUiLCJzdHlsZSIsIm9wdGlvbnMiLCJ2YWx1ZSIsImxhYmVsIiwib3RoZXIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJjbGFzc2VzIiwiYmx4LWRpc2FibGVkIiwiZGlzYWJsZWQiLCJjcmVhdGVFbGVtZW50Iiwicm9sZSIsImFyaWEtbGFiZWwiLCJtYXAiLCJvcHRpb24iLCJpZHgiLCJrZXkiLCJ0ZXh0IiwiX2V4dGVuZHMiLCJ0eXBlIiwiaWQiLCJkZWZhdWx0Q2hlY2tlZCIsInByb3BUeXBlcyIsIm9iamVjdCIsIm9uZU9mVHlwZSIsInN0cmluZyIsIm51bWJlciIsImlzUmVxdWlyZWQiLCJhcnJheU9mIiwic2hhcGUiLCJib29sIiwiZGVmYXVsdFByb3BzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjRVQUFBLElBQU1BLE1BQVFDLFFBQVEsU0FDaEJDLFVBQVlELFFBQVEsY0FDcEJFLFdBQWFGLFFBQVEsY0FFckJHLE9BQVMsU0FBQUMsR0FBMkQsSUFBeERDLEVBQXdERCxFQUF4REMsVUFBV0MsRUFBNkNGLEVBQTdDRSxNQUFPQyxFQUFzQ0gsRUFBdENHLFFBQVNDLEVBQTZCSixFQUE3QkksTUFBT0MsRUFBc0JMLEVBQXRCSyxNQUFVQyxFQUFZQyx5QkFBQVAsRUFBQSxDQUFBLFlBQUEsUUFBQSxVQUFBLFFBQUEsVUFDbEVRLEVBQVVWLFdBQVcsYUFBY0csRUFBVyxDQUNsRFEsZUFBZ0JILEVBQU1JLFdBRXhCLE9BQ0VmLE1BQUFnQixjQUFBLE1BQUEsQ0FDRVQsTUFBT0EsRUFDUEQsVUFBV08sRUFDWEksS0FBSyxhQUNMQyxhQUFZUixHQUdWRixFQUFRVyxJQUFJLFNBQUNDLEVBQVFDLEdBQVQsT0FDVnJCLE1BQUFnQixjQUFBLFFBQUEsQ0FDRVYsVUFBVSx1QkFDVmdCLElBQUtGLEVBQU9HLE1BRVp2QixNQUFBZ0IsY0FBQSxRQUFBUSxTQUFBLENBQ0VDLEtBQUssUUFDTEMsR0FBQSxpQkFBcUJMLEVBQ3JCWixNQUFPVyxFQUFPWCxNQUNka0IsZUFBZ0JQLEVBQU9YLFFBQVVBLEdBQzdCRSxJQUVOWCxNQUFBZ0IsY0FBQSxPQUFBLENBQU1WLFVBQVUsbUJBQ2JjLEVBQU9HLFdBU3RCbkIsT0FBT3dCLFVBQVksQ0FDakJyQixNQUFPTCxVQUFVMkIsT0FDakJ2QixVQUFXSixVQUFVMkIsT0FDckJwQixNQUFPUCxVQUFVNEIsVUFBVSxDQUN6QjVCLFVBQVU2QixPQUNWN0IsVUFBVThCLFNBQ1RDLFdBQ0h6QixRQUFTTixVQUFVZ0MsUUFBUWhDLFVBQVVpQyxNQUFNLENBQ3pDWixLQUFNckIsVUFBVTZCLE9BQU9FLFdBQ3ZCeEIsTUFBT1AsVUFBVTRCLFVBQVUsQ0FDekI1QixVQUFVNkIsT0FDVjdCLFVBQVU4QixTQUNUQyxjQUNEQSxXQUNKbEIsU0FBVWIsVUFBVWtDLEtBQ3BCMUIsTUFBT1IsVUFBVTZCLFFBR25CM0IsT0FBT2lDLGFBQWUsQ0FDcEJ0QixVQUFVLEVBQ1ZMLE1BQU8sVUFHVDRCLE9BQU9DLFFBQVVuQyIsImZpbGUiOiJpbnB1dC9Ub2dnbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBQcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5jb25zdCBjbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jb25zdCBUb2dnbGUgPSAoeyBjbGFzc05hbWUsIHN0eWxlLCBvcHRpb25zLCB2YWx1ZSwgbGFiZWwsIC4uLm90aGVyIH0pID0+IHtcbiAgY29uc3QgY2xhc3NlcyA9IGNsYXNzbmFtZXMoJ2JseC10b2dnbGUnLCBjbGFzc05hbWUsIHtcbiAgICAnYmx4LWRpc2FibGVkJzogb3RoZXIuZGlzYWJsZWRcbiAgfSk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgY2xhc3NOYW1lPXtjbGFzc2VzfVxuICAgICAgcm9sZT1cInJhZGlvZ3JvdXBcIlxuICAgICAgYXJpYS1sYWJlbD17bGFiZWx9XG4gICAgPlxuICAgICAge1xuICAgICAgICBvcHRpb25zLm1hcCgob3B0aW9uLCBpZHgpID0+IChcbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImJseC10b2dnbGUtY29udGFpbmVyXCJcbiAgICAgICAgICAgIGtleT17b3B0aW9uLnRleHR9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgIGlkPXtgdG9nZ2xlLW9wdGlvbi0ke2lkeH1gfVxuICAgICAgICAgICAgICB2YWx1ZT17b3B0aW9uLnZhbHVlfVxuICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17b3B0aW9uLnZhbHVlID09PSB2YWx1ZX1cbiAgICAgICAgICAgICAgey4uLm90aGVyfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImJseC10b2dnbGUtdGV4dFwiPlxuICAgICAgICAgICAgICB7b3B0aW9uLnRleHR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgKSlcbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuVG9nZ2xlLnByb3BUeXBlcyA9IHtcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgdmFsdWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgUHJvcFR5cGVzLm51bWJlclxuICBdKS5pc1JlcXVpcmVkLFxuICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHRleHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgUHJvcFR5cGVzLm51bWJlclxuICAgIF0pLmlzUmVxdWlyZWRcbiAgfSkpLmlzUmVxdWlyZWQsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgbGFiZWw6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cblRvZ2dsZS5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpc2FibGVkOiBmYWxzZSxcbiAgbGFiZWw6ICd0b2dnbGUnXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRvZ2dsZTtcblxuIl19
