"use strict";var _extends=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var t=arguments[o];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},_createClass=function(){function n(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,o,t){return o&&n(e.prototype,o),t&&n(e,t),e}}();function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,o){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!o||"object"!=typeof o&&"function"!=typeof o?e:o}function _inherits(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Super expression must either be null or a function, not "+typeof o);e.prototype=Object.create(o&&o.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),o&&(Object.setPrototypeOf?Object.setPrototypeOf(e,o):e.__proto__=o)}var React=require("react"),PropTypes=require("prop-types");function keyControlledMenu(e){var o=(_inherits(r,React.Component),_createClass(r,[{key:"componentDidUpdate",value:function(e){if(e.options!==this.props.options){for(var o=[],t=0;t<this.props.options.length;t++)o[t]=React.createRef();this.setState({optionsRefs:o})}}},{key:"onSelect",value:function(e,o){o.onClick?o.onClick(e):this.props.onChange&&this.props.onChange(o),this.props.close(e)}},{key:"onKeyDown",value:function(e){"Tab"===e.key&&this.props.isOpen?this.props.close():-1<["ArrowDown"," "].indexOf(e.key)&&!this.props.isOpen?(e.preventDefault(),this.props.open()):(-1<["ArrowDown","ArrowUp","Enter"," "].indexOf(e.key)&&e.preventDefault(),this.moveFocusUsingKey(e.key))}},{key:"onKeyUp",value:function(e,o){-1<["Enter"," "].indexOf(e.key)?this.onSelect(e,o):"Escape"===e.key&&this.props.close()}},{key:"onTriggerFocus",value:function(){this.setState({onFocusIdx:-1})}},{key:"moveFocusUsingKey",value:function(e){var o=this;this.setState({onFocusIdx:this.getFocusIndexAfterKeyPress(e)},function(){return o.focusOption(o.state.onFocusIdx)})}},{key:"getFocusIndexAfterKeyPress",value:function(e){if("ArrowDown"===e)return Math.min(this.state.onFocusIdx+1,this.props.options.length-1);if("ArrowUp"===e)return Math.max(this.state.onFocusIdx-1,0);for(var o=0;o<this.props.options.length;o++){var t=this.props.options[o];if(t.text&&t.text[0].toLowerCase()===e)return o}return this.state.onFocusIdx}},{key:"focusOption",value:function(e){if(!(e<0)){var o=this.state.optionsRefs[e].current;if(o)for(var t=0;t<o.childNodes.length;t++){var n=o.childNodes[t];if("function"==typeof n.focus){n.focus();break}}}}},{key:"render",value:function(){return React.createElement(e,_extends({},this.props,{optionsRefs:this.state.optionsRefs,onKeyDown:this.onKeyDown,onKeyUp:this.onKeyUp,onSelect:this.onSelect,onTriggerFocus:this.onTriggerFocus}))}}]),r);function r(e){_classCallCheck(this,r);for(var o=_possibleConstructorReturn(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e)),t=[],n=0;n<o.props.options.length;n++)t[n]=React.createRef();return o.state={onFocusIdx:-1,optionsRefs:t},o.onSelect=o.onSelect.bind(o),o.onKeyDown=o.onKeyDown.bind(o),o.onKeyUp=o.onKeyUp.bind(o),o.onTriggerFocus=o.onTriggerFocus.bind(o),o}return o.propTypes={isOpen:PropTypes.bool,close:PropTypes.func.isRequired,options:PropTypes.arrayOf(PropTypes.shape({text:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),disabled:PropTypes.bool,value:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),href:PropTypes.string,element:PropTypes.node,key:PropTypes.string})),onChange:PropTypes.func},o.defaultProps={isOpen:!1,options:[],onChange:function(){}},o}module.exports=keyControlledMenu;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
