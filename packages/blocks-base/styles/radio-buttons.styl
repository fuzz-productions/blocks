// radio button specific variables
$radio-size = 16px;

$radio-unselected-default-border = 1px solid $light-01;
$radio-unselected-active-border = 1px solid $light-02;
$radio-unselected-hover-border = 1px solid $light-02;
$radio-unselected-focus-border = 1px solid $focus;
$radio-unselected-error-border = 1px solid $danger-00;

$radio-unselected-background-color = $secondary-00;
$radio-unselected-hover-background-color = $secondary-00;
$radio-unselected-focus-background-color = $secondary-00;

$radio-selected-default-border = 1px solid $primary-00;
$radio-selected-hover-border = 1px solid $primary-01;
$radio-selected-focus-border = 1px solid $focus;
$radio-selected-error-border = 1px solid $danger-00;

$radio-selected-background-color = $primary-00;
$radio-selected-hover-background-color = $primary-01;
$radio-selected-focus-background-color = $primary-00;
$radio-selected-error-background-color = $danger-00;

// radio button styles
.blx-radio {
  display: block;
  position: relative;
  padding: 9px 0 9px 62px;
  margin: 0;
  cursor: pointer;
  user-select: none;
  
  .blx-label {
    line-height: ($radio-size + 2px);
  }
  
  // custom radio button
  .blx-radio-check {
    position: absolute;
    top: 9px;
    left: 32px;
    height: $radio-size;
    width: $radio-size;
    border-radius: 50%;
    
    background-color: $radio-unselected-background-color;
    border: $radio-unselected-default-border;
    
    // the radio button indicator (hidden when not checked)
    &::after {
      display: none;
      content: "";
      position: absolute;
      top: 3px;
      left: 3px;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: $radio-selected-background-color;
    }
  }
  
  // hide the default radio button
  input[type="radio"] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    
    // show the check when the radio button is checked
    &:checked ~ .blx-radio-check {
      border: $radio-selected-default-border;
      
      &::after {
        display: block;
        
      }
    }
    &:checked {
      &:focus + .blx-radio-check, &.blx-focus + .blx-radio-check {
        outline: none;
        border: $radio-selected-focus-border;
        &::before {
          display: block;
        }
      }
      &:active + .blx-radio-check, &.blx-active + .blx-radio-check {
        border: $radio-selected-default-border;
      }
    }
    &:focus + .blx-radio-check, &.blx-focus + .blx-radio-check {
      outline: none;
      border: $radio-unselected-focus-border;
    }
    &:active + .blx-radio-check, &.blx-active + .blx-radio-check {
      background-color: $radio-unselected-background-color;
      border: $radio-unselected-active-border;
    }
  }
  
  &:hover, &.blx-hover {
    input[type="radio"] ~ .blx-radio-check {
      background-color: $radio-unselected-hover-background-color;
      border: $radio-unselected-hover-border;
    }
    
    input[type="radio"]:checked ~ .blx-radio-check {
      background-color: $radio-unselected-background-color;
      border: $radio-selected-hover-border;
      
      &::after {
        background-color: $radio-selected-hover-background-color;
      }
    }
  }
  
  &.blx-disabled {
    box-shadow: none;
    cursor: pointer;
  }

  &.blx-invalid {
    input[type="radio"] ~ .blx-radio-check, input[type="radio"]:hover ~ .blx-radio-check {
      background-color: $radio-unselected-background-color;
      border: $radio-unselected-error-border;

      &::after {
        background-color: $radio-selected-error-background-color;
      }
    }
  }
}
